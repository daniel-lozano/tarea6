#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include "runge.h"

//Este es el esqueleto del segundo punto, lee condiciones iniciales, usa Runge Kutta 4 orden
/**
*infile: datos_iniciales.txt
*outfiles: 
* evolucion1.txt
* evolucion2.txt
* evolucion3.txt
* evolucion4.txt
* evolucion5.txt
**/

void main(){

  FILE *in;
  char letra;
  float *x0,*y0,*vx0,*vy0,*solucion1,*solucion2;
  float *tiempo;
  float X,Y;
  int lineas=0;
  int pasos=5000;
  int dimensiones=3;
  int *numero;
  int i,j,k;

 
  in=fopen("datos_1.dat","r");
  //cuenta las lineas

  do{
    letra = fgetc(in);
    if(letra=='\n'){
      lineas++;
    }
  }while(letra!=EOF);
  rewind(in);

  //se crea un arreglo de soluciones-----------------------------------

  printf("%d lineas del archivo\n",lineas);
  
  //creacion de arrays para la posicion y velocidad iniciales
  //x0, y0, vx0, vy0
  //ya sabemos que hay 120 lineas


  //alocacion de memoria para cada array

  x0 = malloc(lineas * sizeof(float));
  y0 = malloc(lineas * sizeof(float));
  vx0 = malloc(lineas * sizeof(float));
  vy0= malloc(lineas * sizeof(float));
  numero= malloc(lineas * sizeof(int));
  tiempo=malloc(sizeof(float)*pasos);
  solucion1=malloc(sizeof(float)*dimensiones); 
  solucion2=malloc(sizeof(float)*dimensiones); 

  //escaneando datos y guardando en arrays
  //guardando los datos en las filas correspondientes

  for (k=0; k <lineas; k++){
	
    fscanf(in,"%d %f %f %f %f\n",&numero[k],&(x0[k]),&(y0[k]),&(vx0[k]),&(vy0[k])); 
}
  int a=lineas*4;
  float* soluciones[a];
  

  for(i=0;i<lineas;i++){
    soluciones[4*i]=malloc(sizeof(float)*pasos);
    soluciones[4*i+1]=malloc(sizeof(float)*pasos);
    soluciones[4*i+2]=malloc(sizeof(float)*pasos);
    soluciones[4*i+3]=malloc(sizeof(float)*pasos);
    
    soluciones[4*i][0]=x0[i];
    soluciones[4*i+1][0]=y0[i];
    soluciones[4*i+2][0]=vx0[i];
    soluciones[4*i+3][0]=vy0[i];
  }



  //se imprimen la posicion inicial del centro de la galaxia
  X=x0[0];
  Y=y0[0];
  printf("X=%f, Y=%f\n",X,Y);

  //llenamos el tiempo
  for(i=0;i<pasos;i++){
    tiempo[i]=i;
  }

  //ejecutando el metodo rungekutta de 4rto orden
  
  for(i=1;i<pasos;i++){
    //tiempo

    for(j=0;j<lineas;j++){
      //masas

      solucion1=runge1(soluciones[4*j],soluciones[4*j+2],tiempo,1,0,i,soluciones[4*j+1][i],X,Y);
      solucion2=runge1(soluciones[4*j+1],soluciones[4*j+3],tiempo,1,1,i,soluciones[4*j][i],X,Y);
      //X
      soluciones[4*j][i]=solucion1[1];
      //Vx
      soluciones[4*j+2][i]=solucion1[2];
      //Y
      soluciones[4*j+1][i]=solucion2[1];
      //VY
      soluciones[4*j+3][i]=solucion2[2];      
    }
  
  }
  






}

